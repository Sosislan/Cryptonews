import time
import schedule
import requests
from datetime import datetime, timedelta
from translate import Translator
from telebot import TeleBot
from config import Bot_token, API_KEY

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
TELEGRAM_TOKEN = Bot_token
TELEGRAM_CHAT_ID = "@testcrupto"
CRYPTOCOMPARE_API_URL = "https://min-api.cryptocompare.com/data/v2/news/?lang=EN"
CRYPTOCOMPARE_API_KEY = API_KEY

bot = TeleBot(TELEGRAM_TOKEN)
translator = Translator(to_lang="uk")  # –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –ø–µ—Ä–µ–∫–ª–∞–¥ –Ω–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫—É
published_ids = set()  # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è ID –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–∏—Ö –Ω–æ–≤–∏–Ω

def get_crypto_news():
    headers = {"Authorization": f"Apikey {CRYPTOCOMPARE_API_KEY}"}
    response = requests.get(CRYPTOCOMPARE_API_URL, headers=headers)
    if response.status_code == 200:
        news = response.json().get("Data", [])
        print(f"–û—Ç—Ä–∏–º–∞–Ω–æ –Ω–æ–≤–∏–Ω: {len(news)}")
        return news
    print(f"–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–≤–∏–Ω: {response.status_code}")
    return []

def filter_recent_news(news_list):
    """–§—ñ–ª—å—Ç—Ä—É–≤–∞—Ç–∏ –Ω–æ–≤–∏–Ω–∏ –∑–∞ –æ—Å—Ç–∞–Ω–Ω—é –≥–æ–¥–∏–Ω—É"""
    one_hour_ago = datetime.now() - timedelta(hours=1)
    recent_news = []
    for news in news_list:
        if "published_on" in news:
            news_time = datetime.fromtimestamp(news["published_on"])
            if news_time > one_hour_ago:
                recent_news.append(news)
    return recent_news


def translate_text(text):
    """–ü–µ—Ä–µ–∫–ª–∞–¥ —Ç–µ–∫—Å—Ç—É –Ω–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫—É –∑ –æ–±–º–µ–∂–µ–Ω–Ω—è–º –¥–æ–≤–∂–∏–Ω–∏"""
    try:
        if len(text) > 500:  # –û–±–º–µ–∂–µ–Ω–Ω—è –¥–æ–≤–∂–∏–Ω–∏
            text = text[:500]
        translated = translator.translate(text)
        return translated
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–∫–ª–∞–¥—É: {e}")
        return text  # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç —É —Ä–∞–∑—ñ –ø–æ–º–∏–ª–∫–∏

def post_news_to_telegram():
    news_list = get_crypto_news()  # –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –Ω–æ–≤–∏–Ω–∏
    recent_news = filter_recent_news(news_list)  # –§—ñ–ª—å—Ç—Ä—É—î–º–æ –∑–∞ –æ—Å—Ç–∞–Ω–Ω—é –≥–æ–¥–∏–Ω—É
    recent_news = [news for news in recent_news if news.get("id") not in published_ids]  # –£–Ω–∏–∫–∞—î–º–æ —Å—Ç–∞—Ä–∏—Ö –Ω–æ–≤–∏–Ω

    if not recent_news:  # –Ø–∫—â–æ –Ω–µ–º–∞—î –Ω–æ–≤–∏—Ö –Ω–æ–≤–∏–Ω
        print("–ù–µ–º–∞—î –Ω–æ–≤–∏—Ö –Ω–æ–≤–∏–Ω –∑–∞ –æ—Å—Ç–∞–Ω–Ω—é –≥–æ–¥–∏–Ω—É.")
        return

    for news in recent_news[:2]:  # –ë–µ—Ä–µ–º–æ –º–∞–∫—Å–∏–º—É–º 10 –Ω–æ–≤–∏–Ω
        news_id = news.get("id")
        title = news.get("title", "–ë–µ–∑ –Ω–∞–∑–≤–∏")
        #title = translate_text(news.get("title", "–ë–µ–∑ –Ω–∞–∑–≤–∏"))
        #description = translate_text(news.get("body", "–û–ø–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π"))
        description = news.get("body", "–û–ø–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π")
        url = news.get("url", "–ë–µ–∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è")

        message = f"üì∞ {title}\n\n{description[:500]}...\n\nüîó [–ß–∏—Ç–∞—Ç–∏ –¥–∞–ª—ñ]({url})"
        try:
            time.sleep(2)  # –ó–∞—Ç—Ä–∏–º–∫–∞ –º—ñ–∂ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º–∏
            bot.send_message(chat_id=TELEGRAM_CHAT_ID, text=message, parse_mode="Markdown")
            published_ids.add(news_id)  # –î–æ–¥–∞—î–º–æ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –≤ —Å–ø–∏—Å–æ–∫ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏—Ö
            print(f"–û–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ: {title}")
        except Exception as e:
            print(f"–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è: {e}")



schedule.every().hour.do(post_news_to_telegram)

if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ. –û—á—ñ–∫—É–≤–∞–Ω–Ω—è...")
    post_news_to_telegram()
    while True:
        schedule.run_pending()
        time.sleep(1)
